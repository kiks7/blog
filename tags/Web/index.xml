<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web on</title><link>https://kiks7.github.io/pers-blog/tags/Web/</link><description>Recent content in Web on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 Jul 2020 00:00:00 +0100</lastBuildDate><atom:link href="https://kiks7.github.io/pers-blog/tags/Web/index.xml" rel="self" type="application/rss+xml"/><item><title>Owncloud Multiple Vulnerabilities (CSRF, SSRF and Information Leak)</title><link>https://kiks7.github.io/pers-blog/notes/Owncloud-Multiple-Vulnerabilities-CSRF-SSRF-and-Information-Leak/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0100</pubDate><guid>https://kiks7.github.io/pers-blog/notes/Owncloud-Multiple-Vulnerabilities-CSRF-SSRF-and-Information-Leak/</guid><description>Introduction During the research time in Hacktive Security I discovered several flaws in the owncloud product. Owncloud is an open-source cloud service similar to Google Drive.</description></item><item><title>Moodle Server-Side Request Forgery</title><link>https://kiks7.github.io/pers-blog/notes/Moodle-Server-Side-Request-Forgery-SSRF/</link><pubDate>Tue, 14 Apr 2020 00:00:00 +0100</pubDate><guid>https://kiks7.github.io/pers-blog/notes/Moodle-Server-Side-Request-Forgery-SSRF/</guid><description>During the research time in Hacktive Security I found 2 Server-Side Request Forgery on Moodle. The first one is a Blind SSRF already discovered in 2018 and tracked as CVE-2018-1042 without a proper patch, the other one is a fresh SSRF while parsing image tags inside the same component (File Picker).</description></item><item><title>TIM Mobile Phone Geolocalization</title><link>https://kiks7.github.io/pers-blog/notes/TIM-Mobile-Phone-Geolocalization/</link><pubDate>Mon, 09 Dec 2019 15:00:00 +0100</pubDate><guid>https://kiks7.github.io/pers-blog/notes/TIM-Mobile-Phone-Geolocalization/</guid><description>During the monthly research activity in Hacktive Security{:target=&amp;ldquo;blank&amp;rdquo;}, we found and went in depth with an interesting security issue allowing geolocation of mobile devices using TIM, an Italian communication provider.</description></item><item><title>Rusty Joomla Remote Code Execution</title><link>https://kiks7.github.io/pers-blog/notes/Rusty-Joomla-Remote-Code-Execution/</link><pubDate>Thu, 03 Oct 2019 15:00:00 +0100</pubDate><guid>https://kiks7.github.io/pers-blog/notes/Rusty-Joomla-Remote-Code-Execution/</guid><description>Introduction During one of research activities in Hacktive Security, we discovered an undisclosed PHP Object Injection on Joomla CMS from the release 3.</description></item></channel></rss>