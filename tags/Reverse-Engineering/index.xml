<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reverse Engineering on</title><link>https://1day.dev/tags/Reverse-Engineering/</link><description>Recent content in Reverse Engineering on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Nov 2024 00:00:00 +0100</lastBuildDate><atom:link href="https://1day.dev/tags/Reverse-Engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>A Reverse Engineering Journey Walkthrough</title><link>https://1day.dev/notes/A-Reverse-Engineering-Journey-Walkthrough/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0100</pubDate><guid>https://1day.dev/notes/A-Reverse-Engineering-Journey-Walkthrough/</guid><description>Introduction This blog post is about a manually Reverse Engineered challenge I have written for this year NoHat24 security conference. The conference was a blast and we also did (as Hacktive Security) our best to contribute also with a worskhop on Linux Kernel Fuzzing.</description></item><item><title>TODO</title><link>https://1day.dev/notes/ZZTEmplate/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0100</pubDate><guid>https://1day.dev/notes/ZZTEmplate/</guid><description/></item></channel></rss>